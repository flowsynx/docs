"use strict";(self.webpackChunkflowsynx=self.webpackChunkflowsynx||[]).push([[1735],{9160:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>t,metadata:()=>l,toc:()=>a});var s=i(4848),o=i(8453);const t={sidebar_position:3,description:"FlowSynx is fully container-ready, making it easy to deploy in isolated, reproducible environments using Docker. This option is highly recommended for users looking to minimize conflicts, simplify upgrades, and ensure consistent behavior across development, staging, and production environments. Docker Compose configurations are also available for multi-container setups."},r="Docker-based Installation",l={id:"getting-started/docker-based-installation",title:"Docker-based Installation",description:"FlowSynx is fully container-ready, making it easy to deploy in isolated, reproducible environments using Docker. This option is highly recommended for users looking to minimize conflicts, simplify upgrades, and ensure consistent behavior across development, staging, and production environments. Docker Compose configurations are also available for multi-container setups.",source:"@site/docs/getting-started/docker-based-installation.mdx",sourceDirName:"getting-started",slug:"/getting-started/docker-based-installation",permalink:"/docs/getting-started/docker-based-installation",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,description:"FlowSynx is fully container-ready, making it easy to deploy in isolated, reproducible environments using Docker. This option is highly recommended for users looking to minimize conflicts, simplify upgrades, and ensure consistent behavior across development, staging, and production environments. Docker Compose configurations are also available for multi-container setups."},sidebar:"docSidebar",previous:{title:"Flowctl-based Installation",permalink:"/docs/getting-started/flowctl-based-installation"},next:{title:"Reference",permalink:"/docs/reference"}},c={},a=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Step 1: Create a Docker Compose File",id:"step-1-create-a-docker-compose-file",level:2},{value:"Step 2: Launch FlowSynx with Docker Compose",id:"step-2-launch-flowsynx-with-docker-compose",level:2},{value:"Step 3: Verify the Deployment",id:"step-3-verify-the-deployment",level:2},{value:"Check if containers are running successfully:",id:"check-if-containers-are-running-successfully",level:4},{value:"Check container logs if needed:",id:"check-container-logs-if-needed",level:4},{value:"Cleanup",id:"cleanup",level:4},{value:"Step 4: Running the first command",id:"step-4-running-the-first-command",level:2},{value:"Example: Check System Version",id:"example-check-system-version",level:4},{value:"Expected Output:",id:"expected-output",level:4}];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"docker-based-installation",children:"Docker-based Installation"}),"\n",(0,s.jsx)(n.p,{children:"You can run FlowSynx entirely within Docker without requiring any local installation of FlowSynx binaries or the FlowCtl CLI.\nThis is ideal for isolated environments, CI/CD pipelines, or container-native deployments."}),"\n",(0,s.jsx)(n.p,{children:"Prerequisites\nEnsure the following components are installed and configured:"}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Install Docker Engine (v20.10 or later)"}),"\n",(0,s.jsx)(n.li,{children:"Internet access to pull FlowSynx container images"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Recommended:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Docker Compose v2+ (optional but simplifies multi-container orchestration)"}),"\n",(0,s.jsx)(n.li,{children:"Minimum 1 GB RAM and 500 MB disk space"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"step-1-create-a-docker-compose-file",children:"Step 1: Create a Docker Compose File"}),"\n",(0,s.jsxs)(n.p,{children:["Create a new file named ",(0,s.jsx)(n.code,{children:"docker-compose.yml"})," in your working directory:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'version: \'3.8\'\n\nservices:\n  flowsynx:\n    image: flowsynx/flowsynx:1.1.2-linux-amd64\n    container_name: flowsynx\n    environment:\n      DB__HOST: postgres\n      DB__PORT: 5432\n      DB__NAME: flowxDb\n      DB__USERNAME: postgres\n      DB__PASSWORD: postgrespw\n      Security__EnableBasic: true\n      Security__BasicUsers__0__Id: 0960a93d-e42b-4987-bc07-7bda806a21c7\n      Security__BasicUsers__0__Name: admin\n      Security__BasicUsers__0__Password: admin\n      Security__BasicUsers__0__Roles__0: admin\n      Security__DefaultScheme: Basic\n    volumes:\n      - flowsynx-data:/app\n    working_dir: /app\n    ports:\n      - "6262:6262"\n    command: ["--start"]\n    restart: unless-stopped\n    depends_on:\n      - postgres\n    networks:\n      - basicAuth_net\n\n  postgres:\n    image: postgres:15\n    container_name: flowsynx-db\n    environment:\n      POSTGRES_USER: postgres\n      POSTGRES_PASSWORD: postgrespw\n    volumes:\n      - pgdata:/var/lib/postgresql/data\n    ports:\n      - "5432:5432"\n    restart: unless-stopped\n    networks:\n      - basicAuth_net\n\nvolumes:\n  flowsynx-data:\n  pgdata:\n  \nnetworks:\n  basicAuth_net:\n    driver: bridge\n'})}),"\n",(0,s.jsx)(n.h2,{id:"step-2-launch-flowsynx-with-docker-compose",children:"Step 2: Launch FlowSynx with Docker Compose"}),"\n",(0,s.jsxs)(n.p,{children:["Run the following command in the same directory as the ",(0,s.jsx)(n.code,{children:"docker-compose.yml"})," file:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"docker compose up -d\n"})}),"\n",(0,s.jsx)(n.p,{children:"This will:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Pull the FlowSynx engine image (if not already available locally)"}),"\n",(0,s.jsx)(n.li,{children:"Start containers in detached mode"}),"\n",(0,s.jsx)(n.li,{children:"Mount a persistent volume for configuration and data"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"step-3-verify-the-deployment",children:"Step 3: Verify the Deployment"}),"\n",(0,s.jsx)(n.h4,{id:"check-if-containers-are-running-successfully",children:"Check if containers are running successfully:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"docker compose ps\n"})}),"\n",(0,s.jsx)(n.p,{children:"Expected output:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'NAME                 COMMAND               STATUS              PORTS\nflowsynx             "/app/FlowSynx"       Up 30 seconds       0.0.0.0:6262->6262/tcp\n'})}),"\n",(0,s.jsx)(n.h4,{id:"check-container-logs-if-needed",children:"Check container logs if needed:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"docker logs flowsynx\n"})}),"\n",(0,s.jsx)(n.h4,{id:"cleanup",children:"Cleanup"}),"\n",(0,s.jsx)(n.p,{children:"To stop and remove all services and containers:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"docker compose down\n"})}),"\n",(0,s.jsx)(n.p,{children:"To remove persistent data as well:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"docker compose down -v\n"})}),"\n",(0,s.jsx)(n.h2,{id:"step-4-running-the-first-command",children:"Step 4: Running the first command"}),"\n",(0,s.jsx)(n.p,{children:"After your FlowSynx containers are up and running, you can begin interacting with the FlowSynx Engine via its exposed API endpoints.\nThe engine is typically accessible on port 6262 from your host machine."}),"\n",(0,s.jsx)(n.h4,{id:"example-check-system-version",children:"Example: Check System Version"}),"\n",(0,s.jsx)(n.p,{children:"Use the following curl command to verify that the FlowSynx engine is operational:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"curl http://localhost:6262/version\n"})}),"\n",(0,s.jsx)(n.h4,{id:"expected-output",children:"Expected Output:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'{\n  "data": {\n    "version": "1.1.2"\n  },\n  "messages": [],\n  "succeeded": true,\n  "generatedAtUtc": "2025-08-02T09:33:28.7058406Z"\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"If you receive a response like the above, your FlowSynx engine is up and ready to receive further API commands."}),"\n",(0,s.jsx)(n.admonition,{title:"Tip",type:"info",children:(0,s.jsx)(n.p,{children:"If you're running Docker in a remote VM or cloud instance, replace localhost with the IP or hostname of the Docker host."})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>l});var s=i(6540);const o={},t=s.createContext(o);function r(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);